{% macro AjaxListView(entityName, namespace, parameters = []) %}
    {% set id = 'list-view-' ~ entityName %}
    <div id="{{ id }}" data-ajax-load="{{ generatePathByAction(getAction(entityName, 'list', namespace), parameters) }}"></div>
    <script type="text/javascript">
		(() => {
			window.addEventListener('load', () => {
				document.liveQuery('.modal', (el) => {
					updateActions(el);
					el.querySelectorAll('form[data-ajax]').forEach((formEl) => {
						formEl.addEventListener('success', (e) => {
							e.preventDefault();

							window.closeModal();

							loadAlertModule().then((Alert) => {
								new Alert({title: 'Done', timeout: 2000, timeoutProgress: true}).show();
							});

							listView.dispatchEvent(new CustomEvent('reload'));
						});
					})
                });
			});

            const updateActions = (target) => {
				target.querySelectorAll('a[data-action]').forEach((element) => {
					switch (element.dataset.action) {
						case 'view':
						case 'edit':
						case 'add': {
							element.dataset.toggle = 'modal';
							break;
						}
						case 'delete': {
							element.dataset.target = '#' + listView.id;
							break;
						}
						case 'list':
						case 'sort': {
							element.dataset.toggle = 'ajax';
							element.dataset.target = '#' + listView.id;
							break;
						}
					}
				});

				target.dataset.searchForm = '[name="filter"], [name="batch"]';
            };

			const listView = document.querySelector('#{{ id }}');
			listView.addEventListener('loaded', (e) => updateActions(e.target));

		})();
    </script>
{% endmacro %}
